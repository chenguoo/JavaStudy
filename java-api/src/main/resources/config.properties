#数据库
jdbc.url=jdbc:mysql://localhost:3306/test
jdbc.username=root
jdbc.password=

#jndiName=java:comp/env/dataSourceName

#druid datasource
#https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_DruidDataSource%E5%8F%82%E8%80%83%E9%85%8D%E7%BD%AE
druid.initialSize=5
#配置最小连接池数量
druid.minIdle=5
druid.maxActive=100
#配置获取连接等待超时的时间 单位毫秒
druid.maxWait=60000
#配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
druid.timeBetweenEvictionRunsMillis=600000
#配置一个连接在池中最小生存的时间，单位是毫秒  600000 = 10分钟60000
druid.minEvictableIdleTimeMillis=300000
#配置一个连接在池中最大生存的时间，单位是毫秒  840000 = 14分钟
druid.maxEvictableIdleTimeMillis=600000
#用来检测连接是否有效的sql，要求是一个查询语句
druid.validationQuery=SELECT 'X' from  dual
#打开KeepAlive之后的效果:
#1.初始化连接池时会填充到minIdle数量。
#2.连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
#3.当网络断开等原因产生的由ExceptionSorter检测出来的死连接被清除后，自动补充连接到minIdle数量。
druid.keepAlive=true
#申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
druid.testWhileIdle=true
#申请连接时执行validationQuery检测连接是否有效
druid.testOnBorrow=true
#归还连接时执行validationQuery检测连接是否有效
druid.testOnReturn=false
#打开PSCache，并且指定每个连接上PSCache的大小
druid.poolPreparedStatements=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
#在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
druid.maxPoolPreparedStatementPerConnectionSize=0
#连接泄漏监测
druid.removeAbandoned=true
#removeAbandonedTimeout:单位是秒 300=5分钟
druid.removeAbandonedTimeout=300
druid.logAbandoned=true
druid.timeBetweenLogStatsMillis=300000
#配置监控统计拦截的filters，去掉后监控界面sql无法统计
druid.filters=wall,stat,log4j

#shiro
#password.algorithmName=md5
#password.hashIterations=2